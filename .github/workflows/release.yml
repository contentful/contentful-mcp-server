name: release

on:
  push:
    branches: [main]
  workflow_dispatch:
  workflow_call:
    secrets:
      VAULT_URL:
        required: true

permissions:
  contents: write
  id-token: write
  actions: read

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Vault URL: ${{ secrets.VAULT_URL }}"

      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: 'Retrieve Secrets from Vault'
        id: vault
        uses: hashicorp/vault-action@v3.3.0
        with:
          url: ${{ secrets.VAULT_URL }}
          role: ${{ github.event.repository.name }}-github-action
          method: jwt
          path: github-actions
          exportEnv: false
          secrets: |
            secret/data/github/github_packages_read GITHUB_PACKAGES_READ_TOKEN | GITHUB_PACKAGES_READ_TOKEN;
            secret/data/github/github_packages_write GITHUB_PACKAGES_WRITE_TOKEN | GITHUB_PACKAGES_WRITE_TOKEN;
            github/token/${{ github.event.repository.name }}-semantic-release token | GITHUB_TOKEN ;

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Restore the build folders
        uses: actions/cache/restore@v4
        with:
          path: build/
          key: build-cache-${{ github.run_id }}-${{ github.run_attempt }}

      - uses: nrwl/nx-set-shas@dbe0650947e5f2c81f59190a38512cf49126fe6b # sets NX_BASE, NX_HEAD env vars

      # lint/test/build steps already run in build.yml/check.yml workflows.
      - name: Version and Tag (main branch only)
        # Technically, this is an unnecessary double check since the release job only runs on the main branch, see main.yml
        if: github.event_name == 'push' && github.ref == 'refs/heads/fix_release_ely'
        run: |
          set -euox pipefail
          git config --global user.name "${GIT_AUTHOR_NAME}"
          git config --global user.email "${GIT_AUTHOR_EMAIL}"

          echo "GIT_AUTHOR_NAME: ${GIT_AUTHOR_NAME}"
          echo "GIT_AUTHOR_EMAIL: ${GIT_AUTHOR_EMAIL}"
          echo "repoName: ${github.event.repository.name}"
          echo "my GH token: ${MY_GITHUB_TOKEN}"

          git remote set-url origin "https://${GIT_AUTHOR_NAME}:${MY_GITHUB_TOKEN}@github.com/contentful/contentful-mcp-server.git"

          echo "//npm.pkg.github.com/:_authToken=${GITHUB_PACKAGES_WRITE_TOKEN}" >> ~/.npmrc

          AFFECTED=$(npx nx show projects --affected)
          echo "Affected projects: $AFFECTED"
          npx nx release --first-release --verbose --dry-run --yes

          git push --follow-tags
        env:
          MY_GITHUB_TOKEN: ${{ steps.vault.outputs.MY_GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GITHUB_PACKAGES_WRITE_TOKEN: ${{ secrets.GITHUB_PACKAGES_WRITE_TOKEN }}
